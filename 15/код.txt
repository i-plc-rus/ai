def find_max_subarray(arr):
    """
    Находит подмассив с наибольшей суммой элементов.
    
    Алгоритм Кадане с линейной сложностью O(n).
    """
    max_current = max_global = arr[0]
    start = end = s = 0

    for i in range(1, len(arr)):
        # Проверяем, стоит ли продолжать текущую последовательность
        if arr[i] > max_current + arr[i]:
            max_current = arr[i]
            s = i
        else:
            max_current += arr[i]
        
        # Обновляем глобальный максимум, если текущий больше
        if max_current > max_global:
            max_global = max_current
            start = s
            end = i

    return max_global, arr[start:end + 1]

# Пример использования:
array = [-2, 1, -3, 4, -1, 2, 1, -5, 4]
max_sum, subarray = find_max_subarray(array)
print(f"Максимальная сумма: {max_sum}, Подмассив: {subarray}")